{"compress":true,"commitItems":[["c104a794-7a23-46a0-9377-9aca77012a3d",1528968011035,"",[[1528967986951,["oblank@OBMacBook-Pro.local",[[1,0,"fabric-install\n===\n\n\n"]],[0,0],[21,21]]],[1528968010544,["oblank@OBMacBook-Pro.local",[[-1,0,"fabric-install\n===\n\n\n"],[1,21,"---\ntitle: React Native 入门问题集\ndate: 2018-04-09 18:17:53\ntags:\n  - ReactNative\n  - 程序员\ncategories:\n  - 开发\n---"]],[0,21],[108,108]]],[1528968015518,["oblank@OBMacBook-Pro.local",[[-1,66,"ReactNative"],[1,77,"fabric"]],[66,77],[72,72]]],[1528968017999,["oblank@OBMacBook-Pro.local",[[-1,76," 程序员"]],[79,80],[76,76]]],[1528968020549,["oblank@OBMacBook-Pro.local",[[1,76," blockchain"]],[76,76],[87,87]]],[1528968029626,["oblank@OBMacBook-Pro.local",[[-1,42,"4"]],[43,43],[42,42]]],[1528968030042,["oblank@OBMacBook-Pro.local",[[1,42,"6"]],[42,42],[43,43]]],[1528968031194,["oblank@OBMacBook-Pro.local",[[-1,44,"09"]],[46,46],[44,44]]],[1528968031775,["oblank@OBMacBook-Pro.local",[[1,44,"14"]],[44,44],[46,46]]],[1528968037983,["oblank@OBMacBook-Pro.local",[[-1,50,"17"]],[52,52],[50,50]]],[1528968038622,["oblank@OBMacBook-Pro.local",[[1,50,"20"]],[50,50],[52,52]]],[1528968040468,["oblank@OBMacBook-Pro.local",[[-1,48,"8"]],[49,49],[48,48]]],[1528968040934,["oblank@OBMacBook-Pro.local",[[1,48,"7"]],[48,48],[49,49]]],[1528968104533,["oblank@OBMacBook-Pro.local",[[1,110,"\n\n"]],[110,110],[111,111]]],[1528968104734,["oblank@OBMacBook-Pro.local",[[1,112,"\n"]],[111,111],[112,112]]],[1528968105214,["oblank@OBMacBook-Pro.local",[[1,113,"选用云服务，按流量付费，使用后及时销毁\n\n注意选择香港区域的服务器，保证网络的联通，避免额外工作，这算是小小的经验吧，我这里选择的是腾讯云香港服务器（4核8G）。\n\n> 国内服务器可以使用ProxyChain4配合代理来无障碍安装软件\n\n注意服务器版本选择，因为要用到Docker，而根据经验CentOS最好使用7+的版本，我们这里选择的是7.4\n\n*根据文档来看，在Windows、Mac环境下都会多做一些额外工作，建议使用CentOS或Ubuntu这样的系统。*\n\n\n我所用系统内核：\n```bash\nLinux VM_***_centos 3.10.0-693.el7.x86_64\n```\n\n> 按官方文档安装系统环境\n\nhttp://hyperledger-fabric.readthedocs.io/en/latest/prereqs.html\n\n#### 具体要求如下：\n- Docker version 17.06.2-ce or greater.\n- Docker Compose version 1.14.0 or greater.\n- Go version 1.10.x is required.\n- Node.js - version 8.9.x or greater，9.x is not supported at this time.\n\n#### 安装DockerCE社区版\n\n参考官方文档 https://docs.docker.com/install/linux/docker-ce/centos/\n\n确认Docker正常：\n```bash\ndocker --version\nDocker version 18.05.0-ce, build f150324\n```\n\n#### 安装Docker-compose\n\n参考官方文档：https://docs.docker.com/compose/install/#install-compose\n\n确认Docker-compose正常：\n```bash\ndocker-compose --version\ndocker-compose version 1.21.2, build a133471\n```\n\n#### 安装 Go\nFabric是由Go开发的，智能合约Chaincode也是Go实现的\n\n参考文档：https://golang.org/doc/install?download=go1.10.2.linux-amd64.tar.gz\n\n确定Go正常：\n```go\ngo version\ngo version go1.10.2 linux/amd64\n\n# test code\ngo run hello.go \nhello, world\n```\n\n#### Node.js 安装\n这里使用NVM进行多版本管理\n\n参考：https://github.com/creationix/nvm/blob/master/README.md\n\n确认安装正常：\n```bash\nnvm install 8.9.4\nnvm use v8.9.4\n\nnpm -v\n5.6.0\n```\n\n\n### 按文档安装Fabric\n\nhttp://hyperledger-fabric.readthedocs.io/en/latest/install.html\n\n执行：\n\n\n```\n# 如果系统没有GIT则先安装GIT\nsudo yum install git -y\n\n# 安装 Fabric\ncurl -sSL https://goo.gl/6wtTN5 | bash -s 1.1.0\n```\n\n没问题的话用`docker images`命令会看下列结果：\n\n```bash\n# docker images\n\nREPOSITORY                     TAG                 IMAGE ID            CREATED             SIZE\nhello-world                    latest              e38bc07ac18e        6 weeks ago         1.85kB\nhyperledger/fabric-ca          latest              72617b4fa9b4        2 months ago        299MB\nhyperledger/fabric-ca          x86_64-1.1.0        72617b4fa9b4        2 months ago        299MB\nhyperledger/fabric-tools       latest              b7bfddf508bc        2 months ago        1.46GB\nhyperledger/fabric-tools       x86_64-1.1.0        b7bfddf508bc        2 months ago        1.46GB\nhyperledger/fabric-orderer     latest              ce0c810df36a        2 months ago        180MB\nhyperledger/fabric-orderer     x86_64-1.1.0        ce0c810df36a        2 months ago        180MB\nhyperledger/fabric-peer        latest              b023f9be0771        2 months ago        187MB\nhyperledger/fabric-peer        x86_64-1.1.0        b023f9be0771        2 months ago        187MB\nhyperledger/fabric-javaenv     latest              82098abb1a17        2 months ago        1.52GB\nhyperledger/fabric-javaenv     x86_64-1.1.0        82098abb1a17        2 months ago        1.52GB\nhyperledger/fabric-ccenv       latest              c8b4909d8d46        2 months ago        1.39GB\nhyperledger/fabric-ccenv       x86_64-1.1.0        c8b4909d8d46        2 months ago        1.39GB\nhyperledger/fabric-zookeeper   latest              92cbb952b6f8        3 months ago        1.39GB\nhyperledger/fabric-zookeeper   x86_64-0.4.6        92cbb952b6f8        3 months ago        1.39GB\nhyperledger/fabric-kafka       latest              554c591b86a8        3 months ago        1.4GB\nhyperledger/fabric-kafka       x86_64-0.4.6        554c591b86a8        3 months ago        1.4GB\nhyperledger/fabric-couchdb     latest              7e73c828fc5b        3 months ago        1.56GB\nhyperledger/fabric-couchdb     x86_64-0.4.6        7e73c828fc5b        3 months ago        1.56GB\n```\n\n添加PATH环境变理：\n```bash\n# 具体路径以你实际情况为准\nexport PATH=$PATH:/root/go/src/fabric-samples/bin\n```\n\n#### 运行第一个测试网络\n\n参考：http://hyperledger-fabric.readthedocs.io/en/latest/build_network.html\n\n在`fabric-samples/first-network`目录下执行：\n\n```bash\n./byfn.sh generate\n./byfn.sh up\n\n# 直到出现下面的提示\n========= All GOOD, BYFN execution completed =========== \n\n\n _____   _   _   ____   \n| ____| | \\ | | |  _ \\  \n|  _|   |  \\| | | | | | \n| |___  | |\\  | | |_| | \n|_____| |_| \\_| |____/  \n```\n\n这个时候再使用使用`docker ps`，会出现如下结果：\n\n```bash\n# docker ps\nCONTAINER ID        IMAGE                                                                                                  COMMAND                  CREATED             STATUS              PORTS                                              NAMES\n61be9101c099        dev-peer1.org2.example.com-mycc-1.0-26c2ef32838554aac4f7ad6f100aca865e87959c9a126e86d764c8d01f8346ab   \"chaincode -peer.add…\"   3 minutes ago       Up 3 minutes                                                           dev-peer1.org2.example.com-mycc-1.0\neda8b0fd85ff        dev-peer0.org1.example.com-mycc-1.0-384f11f484b9302df90b453200cfb25174305fce8f53f4e94d45ee3b6cab0ce9   \"chaincode -peer.add…\"   3 minutes ago       Up 3 minutes                                                           dev-peer0.org1.example.com-mycc-1.0\n6107fb4406fc        dev-peer0.org2.example.com-mycc-1.0-15b571b3ce849066b7ec74497da3b27e54e0df1345daff3951b94245ce09c42b   \"chaincode -peer.add…\"   4 minutes ago       Up 4 minutes                                                           dev-peer0.org2.example.com-mycc-1.0\nb8204bfc0734        hyperledger/fabric-tools:latest                                                                        \"/bin/bash\"              4 minutes ago       Up 4 minutes                                                           cli\n83ff712ca3bd        hyperledger/fabric-peer:latest                                                                         \"peer node start\"        4 minutes ago       Up 4 minutes        0.0.0.0:8051->7051/tcp, 0.0.0.0:8053->7053/tcp     peer1.org1.example.com\n677a3fc1c6c7        hyperledger/fabric-peer:latest                                                                         \"peer node start\"        4 minutes ago       Up 4 minutes        0.0.0.0:7051->7051/tcp, 0.0.0.0:7053->7053/tcp     peer0.org1.example.com\n193de4b51d5a        hyperledger/fabric-peer:latest                                                                         \"peer node start\"        4 minutes ago       Up 4 minutes        0.0.0.0:9051->7051/tcp, 0.0.0.0:9053->7053/tcp     peer0.org2.example.com\nebafff254a5b        hyperledger/fabric-orderer:latest                                                                      \"orderer\"                4 minutes ago       Up 4 minutes        0.0.0.0:7050->7050/tcp                             orderer.example.com\nebe3b1c8f9e8        hyperledger/fabric-peer:latest                                                                         \"peer node start\"        4 minutes ago       Up 4 minutes        0.0.0.0:10051->7051/tcp, 0.0.0.0:10053->7053/tcp   peer1.org2.example.com\n\n```\n\n简洁模式\n\n```bash\n# docker ps --format \"{{.ID}}\\t{{.Names}}\"\n\n61be9101c099    dev-peer1.org2.example.com-mycc-1.0\neda8b0fd85ff    dev-peer0.org1.example.com-mycc-1.0\n6107fb4406fc    dev-peer0.org2.example.com-mycc-1.0\nb8204bfc0734    cli\n83ff712ca3bd    peer1.org1.example.com\n677a3fc1c6c7    peer0.org1.example.com\n193de4b51d5a    peer0.org2.example.com\nebafff254a5b    orderer.example.com\nebe3b1c8f9e8    peer1.org2.example.com\n```\n\n这样就模拟了一个简单的区块链网络，它有1个排序机构（order org），2个节点组织（peer org）每个组织有2个节点（peer）。\n\n上面的组织机构定义在`configtx.yaml`文件中，而各个容器的拓扑关系定义在`crypto-config.yaml`文件中，使用 `./byfn.sh down` 可以关闭这个网络。\n"]],[112,112],[7390,7390]]],[1528968108980,["oblank@OBMacBook-Pro.local",[[-1,112,"\n"]],[113,113],[112,112]]],[1528968109161,["oblank@OBMacBook-Pro.local",[[-1,111,"\n"]],[112,112],[111,111]]],[1528968110177,["oblank@OBMacBook-Pro.local",[[1,111,"\n"]],[111,111],[112,112]]],[1528968116313,["oblank@OBMacBook-Pro.local",[[1,112,"推荐"]],[112,112],[114,114]]],[1528968119930,["oblank@OBMacBook-Pro.local",[[1,119,"器"]],[119,119],[120,120]]],[1528968148386,["oblank@OBMacBook-Pro.local",[[-1,11,"React Native 入门问题集\n"]],[11,30],[11,11]]],[1528968149503,["oblank@OBMacBook-Pro.local",[[1,11,"React Native 入门问题集\n"]],[11,11],[11,30]]],[1528968153297,["oblank@OBMacBook-Pro.local",[[-1,11,"React Native 入门问题集"]],[11,29],[11,11]]],[1528968153662,["oblank@OBMacBook-Pro.local",[[1,11,"Hypleder Fabric 体验"]],[11,11],[29,29]]]]]]}